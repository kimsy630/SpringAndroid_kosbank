<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace = "spring.mvc.android_kosbank.persistence.MembersDAO">
	<insert id="insertMember" parameterType="java.util.Map">
		INSERT INTO members(id,pw,name,jumin,job,address,postnum,d_address,phone,email,authority)
		VALUES(#{id},#{pw},#{name},#{RRN},#{job},#{address},'nn','nn',#{phone},#{email},'ROLE_USER')
	</insert>
	
	<select id ="getMemberInfo" parameterType="String" resultType="spring.mvc.android_kosbank.vo.MembersVO">
		SELECT * 
		FROM members
		WHERE id=#{id}
	</select>
	<select id="getAccountInfo_Main" parameterType="String" resultType="spring.mvc.android_kosbank.vo.AccountVO"> 
		SELECT account, balance ,RANKING
		  FROM(SELECT ROWNUM RANKING,i.*
                 FROM(SELECT account, balance
                      FROM account_info
                      WHERE id=#{id}
                      ORDER BY balance DESC) i)
		    WHERE RANKING = 1
	</select>
	
	<select id="my_Account_List" parameterType="String" resultType="spring.mvc.android_kosbank.vo.AccountVO">
		SELECT account, balance, accounttype
		  FROM account_info
		 WHERE id = #{id}
		 order by new_date asc
	</select>
	
	<select id="get_TransferDetail" parameterType="String" resultType="spring.mvc.android_kosbank.vo.And_TransferDetailVO">
		<![CDATA[
		SELECT account
         , money
         , in_comment
         , out_comment
         , in_out
         , TO_CHAR (in_outdate, 'YY-MM-DD') AS in_outday
         , TO_CHAR (in_outdate, 'HH24:MI:SS') AS in_outtime
         , TO_CHAR(balance-summoney+money) AS balance
    FROM(SELECT account
         	  , money
              , balance
              , in_comment
              , out_comment
              , in_out
              , in_outdate 
              , SUM(money) OVER(ORDER BY in_outdate DESC) as summoney
         FROM  (select t.account,t.money,i.balance,t.in_comment
                     , t.out_comment
                     , t.in_out
                     , t.in_outdate
                FROM account_info i
                  LEFT JOIN account_transfer t
                   ON i.account=t.account
                WHERE i.account=#{account}
                AND t.in_out='입금'
                UNION
                select t.account,t.money,i.balance
                     , t.in_comment
                     , t.out_comment
                     , t.in_out 
                     , t.in_outdate
                FROM account_info i
                  LEFT JOIN account_transfer t
                   ON i.account=t.account
                WHERE i.account=#{account}
                AND t.in_out='출금' ))
    ORDER BY in_outdate DESC
		]]>
	</select>
</mapper>